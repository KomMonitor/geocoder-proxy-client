/*
 * KomMonitor Geocoder Proxy
 * KomMonitor Geocoder Proxy that defines a common query and response interface for arbitrary geocoding services like nominatim, photon (datasource is OSM)
 *
 * OpenAPI spec version: 0.0.1
 * Contact: christian.danowski-buhren@hs-bochum.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.31
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {GeocodingFeatureType} from './GeocodingFeatureType';

/**
 * The GeocodingOutputType model module.
 * @module model/GeocodingOutputType
 * @version 0.0.1
 */
export class GeocodingOutputType {
  /**
   * Constructs a new <code>GeocodingOutputType</code>.
   * output generated by a geocoding request. 0 or more records in the form of a GeoJSON FeatureCollection (if emtpy then the returned FeatureCollection has an empty features array)
   * @alias module:model/GeocodingOutputType
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>GeocodingOutputType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GeocodingOutputType} obj Optional instance to populate.
   * @return {module:model/GeocodingOutputType} The populated <code>GeocodingOutputType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GeocodingOutputType();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('features'))
        obj.features = ApiClient.convertToType(data['features'], [GeocodingFeatureType]);
    }
    return obj;
  }
}

/**
 * @member {String} type
 * @default 'FeatureCollection'
 */
GeocodingOutputType.prototype.type = 'FeatureCollection';

/**
 * @member {Array.<module:model/GeocodingFeatureType>} features
 */
GeocodingOutputType.prototype.features = undefined;

